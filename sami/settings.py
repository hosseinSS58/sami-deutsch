"""
Django settings for sami project.

Generated by 'django-admin startproject' using Django 5.1.11.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Environment
env = environ.Env(
    DEBUG=(bool, True),
)
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY", default="django-insecure-dev-secret-key")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default=True)

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["localhost", "127.0.0.1", "192.168.1.102"]) 


# Application definition

INSTALLED_APPS = [
    # Django core
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",

    # Third-party
    "crispy_forms",
    "crispy_bootstrap5",
    "django_filters",
    "payments",

    # Local apps
    "core",
    "courses",
    "blog",
    "shop",
    "accounts",
    "search",
    "assessments",
    "siteconfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "sami.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "siteconfig.context_processors.site_settings",
            ],
        },
    },
]

WSGI_APPLICATION = "sami.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": env.db(
        "DATABASE_URL",
        default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}",
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


############################
# Time Zone
############################

TIME_ZONE = env("TIME_ZONE", default="UTC")
USE_TZ = True


############################
# Static & Media files
# https://docs.djangoproject.com/en/5.1/howto/static-files/
############################

STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

############################
# Crispy Forms
############################

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"



############################
# Search / MeiliSearch
############################

MEILI_URL = env("MEILI_URL", default="http://127.0.0.1:7700")
MEILI_API_KEY = env("MEILI_API_KEY", default=None)

############################
# Payments (django-payments) - configure providers via env
############################

PAYMENTS_VARIANTS = {
    # Example variants; provide proper keys in .env for real use
    # "stripe": ("payments.stripe.StripeProvider", {
    #     "secret_key": env("STRIPE_SECRET_KEY", default=""),
    #     "public_key": env("STRIPE_PUBLIC_KEY", default=""),
    #     "store_name": env("STORE_NAME", default="Sami Language"),
    #     "store_image": None,
    # }),
    # "paypal": ("payments.paypal.PaypalProvider", {
    #     "client_id": env("PAYPAL_CLIENT_ID", default=""),
    #     "secret": env("PAYPAL_SECRET", default=""),
    #     "endpoint": env("PAYPAL_ENDPOINT", default="https://api-m.sandbox.paypal.com"),
    # }),
    # Development dummy provider
    "dummy": ("payments.dummy.DummyProvider", {}),
}

# django-payments host settings (development)
PAYMENT_HOST = env("PAYMENT_HOST", default="127.0.0.1:8000")
PAYMENT_USES_HTTPS = env.bool("PAYMENT_USES_HTTPS", default=False)

############################
# Email (development defaults)
############################

EMAIL_BACKEND = env(
    "EMAIL_BACKEND",
    default="django.core.mail.backends.console.EmailBackend",
)

# Auth redirects
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
